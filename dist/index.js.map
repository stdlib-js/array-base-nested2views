{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar setNonEnumerableReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar setNonEnumerable = require( '@stdlib/utils-define-nonenumerable-property' );\nvar setReadWriteAccessor = require( '@stdlib/utils-define-read-write-accessor' );\nvar resolveGetter = require( '@stdlib/array-base-resolve-getter' );\nvar accessors = require( '@stdlib/array-base-accessors' );\nvar copy = require( '@stdlib/array-base-copy' );\n\n\n// MAIN //\n\n/**\n* Converts each nested array to a composite view.\n*\n* ## Notes\n*\n* -   The function assumes that all nested arrays have the same length.\n* -   The number of provided array labels should equal the length of each nested array.\n* -   Each view in the returned array shares the same memory as the corresponding elements in the input arrays. Accordingly, mutation of either a nested array or a view will mutate the other.\n*\n* @param {Collection<Collection>} arr - input array\n* @param {ArrayLikeObject<string>} fields - list of field names\n* @returns {Array<Object>} output array\n*\n* @example\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n* var fields = [ 'x', 'y' ];\n*\n* var out = nested2views( x, fields );\n* // returns [ <Object>, <Object> ]\n*\n* var v0 = out[ 0 ].toJSON();\n* // returns { 'x': 1, 'y': 2 }\n*\n* var v1 = out[ 1 ].toJSON();\n* // returns { 'x': 3, 'y': 4 }\n*\n* // Mutate the first nested array:\n* x[ 0 ][ 0 ] = 5;\n*\n* v0 = out[ 0 ].toJSON();\n* // returns { 'x': 5, 'y': 2 }\n*\n* // Set a view property:\n* out[ 1 ].y = 'beep';\n*\n* v1 = out[ 1 ].toJSON();\n* // returns { 'x': 3, 'y': 'beep' }\n*\n* var y = x.slice();\n* // returns [ [ 5, 2 ], [ 3, 'beep' ] ]\n*/\nfunction nested2views( arr, fields ) {\n\tvar oget;\n\tvar keys;\n\tvar out;\n\tvar M;\n\tvar N;\n\tvar i;\n\n\tM = arr.length;\n\tif ( M < 1 ) {\n\t\treturn [];\n\t}\n\toget = resolveGetter( arr );\n\tN = oget( arr, 0 ).length;\n\tif ( N < 1 ) {\n\t\treturn [];\n\t}\n\t// Create a copy of provided fields to prevent external mutation:\n\tkeys = copy( fields );\n\n\t// eslint-disable-next-line stdlib/jsdoc-typedef-typos\n\t/**\n\t* Constructor for creating a composite view.\n\t*\n\t* @private\n\t* @constructor\n\t* @param {Collection} arr - nested array\n\t* @param {NonNegativeInteger} i - element index\n\t* @returns {Datum} datum instance\n\t*/\n\tfunction Datum( arr, i ) {\n\t\tvar acc = accessors( arr ).accessors;\n\t\tsetNonEnumerable( this, '_arr', arr );\n\t\tsetNonEnumerable( this, '_get', acc[ 0 ] );\n\t\tsetNonEnumerable( this, '_set', acc[ 1 ] );\n\t\tsetNonEnumerableReadOnly( this, '_i', i );\n\t\treturn this;\n\t}\n\n\t// Define accessors for each field...\n\tfor ( i = 0; i < N; i++ ) {\n\t\tsetReadWriteAccessor( Datum.prototype, keys[ i ], getValue( i ), setValue( i ) ); // eslint-disable-line max-len\n\t}\n\n\t// Define a method for ensuring that cached references are up-to-date:\n\tsetNonEnumerableReadOnly( Datum.prototype, '_updateCache', updateCache );\n\n\t// Ensure that the returned array correctly serializes to JSON:\n\tsetNonEnumerableReadOnly( Datum.prototype, 'toJSON', toJSON );\n\n\t// Create a list of composite views...\n\tout = [];\n\tfor ( i = 0; i < M; i++ ) {\n\t\tout.push( new Datum( oget( arr, i ), i ) );\n\t}\n\treturn out;\n\n\t/**\n\t* Updates cached references, if necessary.\n\t*\n\t* @private\n\t*/\n\tfunction updateCache() {\n\t\tvar acc;\n\t\tvar ref;\n\n\t\tref = oget( arr, this._i );\n\t\tif ( ref !== this._arr ) {\n\t\t\tacc = accessors( ref ).accessors;\n\t\t\tthis._arr = ref;\n\t\t\tthis._get = acc[ 0 ];\n\t\t\tthis._set = acc[ 1 ];\n\t\t}\n\t}\n\n\t/**\n\t* Returns an accessor for returning the value associated with a field.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} idx - field index\n\t* @returns {Function} accessor\n\t*/\n\tfunction getValue( idx ) {\n\t\treturn get;\n\n\t\t/**\n\t\t* Returns the value associated with a field.\n\t\t*\n\t\t* @private\n\t\t* @returns {*} result\n\t\t*/\n\t\tfunction get() {\n\t\t\tthis._updateCache();\n\t\t\treturn this._get( this._arr, idx );\n\t\t}\n\t}\n\n\t/**\n\t* Returns an accessor for setting the value associated with a field.\n\t*\n\t* @private\n\t* @param {NonNegativeInteger} idx - field index\n\t* @returns {Function} accessor\n\t*/\n\tfunction setValue( idx ) {\n\t\treturn set;\n\n\t\t/**\n\t\t* Sets the value associated with a field.\n\t\t*\n\t\t* @private\n\t\t* @param {*} value - value to set\n\t\t*/\n\t\tfunction set( value ) {\n\t\t\tthis._updateCache();\n\t\t\tthis._set( this._arr, idx, value );\n\t\t}\n\t}\n\n\t/**\n\t* Serializes a datum to JSON.\n\t*\n\t* @private\n\t* @returns {Object} JSON object\n\t*/\n\tfunction toJSON() {\n\t\tvar out;\n\t\tvar k;\n\t\tvar i;\n\n\t\tout = {};\n\t\tfor ( i = 0; i < M; i++ ) {\n\t\t\tk = keys[ i ];\n\t\t\tout[ k ] = this[ k ];\n\t\t}\n\t\treturn out;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = nested2views;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert nested arrays to composite views.\n*\n* @module @stdlib/array-base-nested2views\n*\n* @example\n* var nested2views = require( '@stdlib/array-base-nested2views' );\n*\n* var x = [ [ 1, 2 ], [ 3, 4 ] ];\n* var fields = [ 'x', 'y' ];\n*\n* var out = nested2views( x, fields );\n* // returns [ <Object>, <Object> ]\n*\n* var v0 = out[ 0 ].toJSON();\n* // returns { 'x': 1, 'y': 2 }\n*\n* var v1 = out[ 1 ].toJSON();\n* // returns { 'x': 3, 'y': 4 }\n*\n* // Mutate the first nested array:\n* x[ 0 ][ 0 ] = 5;\n*\n* v0 = out[ 0 ].toJSON();\n* // returns { 'x': 5, 'y': 2 }\n*\n* // Set a view property:\n* out[ 1 ].y = 'beep';\n*\n* v1 = out[ 1 ].toJSON();\n* // returns { 'x': 3, 'y': 'beep' }\n*\n* var y = x.slice();\n* // returns [ [ 5, 2 ], [ 3, 'beep' ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAwBA,IAAIC,EAA2B,QAAS,uDAAwD,EAC5FC,EAAmB,QAAS,6CAA8C,EAC1EC,EAAuB,QAAS,0CAA2C,EAC3EC,EAAgB,QAAS,mCAAoC,EAC7DC,EAAY,QAAS,8BAA+B,EACpDC,EAAO,QAAS,yBAA0B,EA8C9C,SAASC,EAAcC,EAAKC,EAAS,CACpC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAF,EAAIL,EAAI,OACHK,EAAI,EACR,MAAO,CAAC,EAIT,GAFAH,EAAON,EAAeI,CAAI,EAC1BM,EAAIJ,EAAMF,EAAK,CAAE,EAAE,OACdM,EAAI,EACR,MAAO,CAAC,EAGTH,EAAOL,EAAMG,CAAO,EAYpB,SAASO,EAAOR,EAAKO,EAAI,CACxB,IAAIE,EAAMZ,EAAWG,CAAI,EAAE,UAC3B,OAAAN,EAAkB,KAAM,OAAQM,CAAI,EACpCN,EAAkB,KAAM,OAAQe,EAAK,CAAE,CAAE,EACzCf,EAAkB,KAAM,OAAQe,EAAK,CAAE,CAAE,EACzChB,EAA0B,KAAM,KAAMc,CAAE,EACjC,IACR,CAGA,IAAMA,EAAI,EAAGA,EAAID,EAAGC,IACnBZ,EAAsBa,EAAM,UAAWL,EAAMI,CAAE,EAAGG,EAAUH,CAAE,EAAGI,EAAUJ,CAAE,CAAE,EAWhF,IAPAd,EAA0Be,EAAM,UAAW,eAAgBI,CAAY,EAGvEnB,EAA0Be,EAAM,UAAW,SAAUK,CAAO,EAG5DT,EAAM,CAAC,EACDG,EAAI,EAAGA,EAAIF,EAAGE,IACnBH,EAAI,KAAM,IAAII,EAAON,EAAMF,EAAKO,CAAE,EAAGA,CAAE,CAAE,EAE1C,OAAOH,EAOP,SAASQ,GAAc,CACtB,IAAIH,EACAK,EAEJA,EAAMZ,EAAMF,EAAK,KAAK,EAAG,EACpBc,IAAQ,KAAK,OACjBL,EAAMZ,EAAWiB,CAAI,EAAE,UACvB,KAAK,KAAOA,EACZ,KAAK,KAAOL,EAAK,CAAE,EACnB,KAAK,KAAOA,EAAK,CAAE,EAErB,CASA,SAASC,EAAUK,EAAM,CACxB,OAAOC,EAQP,SAASA,GAAM,CACd,YAAK,aAAa,EACX,KAAK,KAAM,KAAK,KAAMD,CAAI,CAClC,CACD,CASA,SAASJ,EAAUI,EAAM,CACxB,OAAOE,EAQP,SAASA,EAAKC,EAAQ,CACrB,KAAK,aAAa,EAClB,KAAK,KAAM,KAAK,KAAMH,EAAKG,CAAM,CAClC,CACD,CAQA,SAASL,GAAS,CACjB,IAAIT,EACAe,EACAZ,EAGJ,IADAH,EAAM,CAAC,EACDG,EAAI,EAAGA,EAAIF,EAAGE,IACnBY,EAAIhB,EAAMI,CAAE,EACZH,EAAKe,CAAE,EAAI,KAAMA,CAAE,EAEpB,OAAOf,CACR,CACD,CAKAZ,EAAO,QAAUO,IC/JjB,IAAIqB,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "setNonEnumerableReadOnly", "setNonEnumerable", "setReadWriteAccessor", "resolveGetter", "accessors", "copy", "nested2views", "arr", "fields", "oget", "keys", "out", "M", "N", "i", "Datum", "acc", "getValue", "setValue", "updateCache", "toJSON", "ref", "idx", "get", "set", "value", "k", "main"]
}
